{"ast":null,"code":"var _jsxFileName = \"/Users/lakshman/Project/chatter_communications/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{\n        name: \"Lakshman\",\n        \"transactions\": [{\n          \"month\": \"January\",\n          \"transfer\": 120,\n          trans: null\n        }, {\n          \"month\": \"February\",\n          \"transfer\": 90,\n          trans: null\n        }, {\n          \"month\": \"March\",\n          \"transfer\": 50,\n          trans: null\n        }],\n        total: null\n      }, {\n        name: \"Kumar\",\n        \"transactions\": [{\n          \"month\": \"January\",\n          \"transfer\": 180,\n          trans: null\n        }, {\n          \"month\": \"February\",\n          \"transfer\": 120,\n          trans: null\n        }, {\n          \"month\": \"March\",\n          \"transfer\": 90,\n          trans: null\n        }],\n        total: null\n      }, {\n        name: \"Yerra\",\n        \"transactions\": [{\n          \"month\": \"January\",\n          \"transfer\": 100,\n          trans: null\n        }, {\n          \"month\": \"February\",\n          \"transfer\": 200,\n          trans: null\n        }, {\n          \"month\": \"March\",\n          \"transfer\": 20,\n          trans: null\n        }],\n        total: null\n      }]\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n    let tableData = this.state.data.map(value => {\n      let total = 0;\n      value.transactions.forEach(val => {\n        debugger;\n\n        if (val.transfer >= 100) {\n          val.trans = 2 * (val.transfer - 100);\n        }\n\n        if (val.transfer > 100) {\n          val.trans = val.trans + 1 * 50;\n        }\n\n        if (val.transfer > 50 && val.transfer <= 100) {\n          val.trans = 1 * (val.transfer - 50);\n        }\n\n        if (val.transfer <= 50) {\n          val.trans = 0;\n        }\n\n        total = total + val.trans;\n      });\n      value.total = total;\n      return value;\n    });\n    this.setState({\n      data: tableData\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      class: \"table table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"January / points \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"February / points \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"March / points \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Total\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, this.state.data.map(value => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, value.name), value.transactions.map(val => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 23\n          }\n        }, val.transfer, \" / \", val.trans, \" \");\n      }), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }, value.total));\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lakshman/Project/chatter_communications/src/App.js"],"names":["React","Component","App","state","data","name","trans","total","componentDidMount","tableData","map","value","transactions","forEach","val","transfer","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BE,KAF0B,GAElB;AACNC,MAAAA,IAAI,EAAE,CAAC;AACLC,QAAAA,IAAI,EAAE,UADD;AAEL,wBAAgB,CACd;AACE,mBAAS,SADX;AAEE,sBAAY,GAFd;AAGEC,UAAAA,KAAK,EAAE;AAHT,SADc,EAMd;AACE,mBAAS,UADX;AAEE,sBAAY,EAFd;AAGEA,UAAAA,KAAK,EAAE;AAHT,SANc,EAWd;AACE,mBAAS,OADX;AAEE,sBAAY,EAFd;AAGEA,UAAAA,KAAK,EAAE;AAHT,SAXc,CAFX;AAmBLC,QAAAA,KAAK,EAAE;AAnBF,OAAD,EAqBN;AACEF,QAAAA,IAAI,EAAE,OADR;AAEE,wBAAgB,CACd;AACE,mBAAS,SADX;AAEE,sBAAY,GAFd;AAGEC,UAAAA,KAAK,EAAE;AAHT,SADc,EAMd;AACE,mBAAS,UADX;AAEE,sBAAY,GAFd;AAGEA,UAAAA,KAAK,EAAE;AAHT,SANc,EAWd;AACE,mBAAS,OADX;AAEE,sBAAY,EAFd;AAGEA,UAAAA,KAAK,EAAE;AAHT,SAXc,CAFlB;AAmBEC,QAAAA,KAAK,EAAE;AAnBT,OArBM,EA0CN;AACEF,QAAAA,IAAI,EAAE,OADR;AAEE,wBAAgB,CACd;AACE,mBAAS,SADX;AAEE,sBAAY,GAFd;AAGEC,UAAAA,KAAK,EAAE;AAHT,SADc,EAMd;AACE,mBAAS,UADX;AAEE,sBAAY,GAFd;AAGEA,UAAAA,KAAK,EAAE;AAHT,SANc,EAWd;AACE,mBAAS,OADX;AAEE,sBAAY,EAFd;AAGEA,UAAAA,KAAK,EAAE;AAHT,SAXc,CAFlB;AAmBEC,QAAAA,KAAK,EAAE;AAnBT,OA1CM;AADA,KAFkB;AAAA;;AAoE1BC,EAAAA,iBAAiB,GAAG;AAAC;AACnB,QAAIC,SAAS,GAAG,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoBC,KAAK,IAAI;AAC3C,UAAIJ,KAAK,GAAG,CAAZ;AACAI,MAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA4BC,GAAD,IAAS;AAAC;;AAGnC,YAAIA,GAAG,CAACC,QAAJ,IAAgB,GAApB,EAAyB;AACvBD,UAAAA,GAAG,CAACR,KAAJ,GAAY,KAAKQ,GAAG,CAACC,QAAJ,GAAa,GAAlB,CAAZ;AACD;;AAED,YAAGD,GAAG,CAACC,QAAJ,GAAc,GAAjB,EAAqB;AACnBD,UAAAA,GAAG,CAACR,KAAJ,GAAYQ,GAAG,CAACR,KAAJ,GAAa,IAAE,EAA3B;AACD;;AAED,YAAIQ,GAAG,CAACC,QAAJ,GAAe,EAAf,IAAqBD,GAAG,CAACC,QAAJ,IAAgB,GAAzC,EAA8C;AAC5CD,UAAAA,GAAG,CAACR,KAAJ,GAAY,KAAIQ,GAAG,CAACC,QAAJ,GAAa,EAAjB,CAAZ;AACD;;AAED,YAAGD,GAAG,CAACC,QAAJ,IAAe,EAAlB,EAAqB;AACnBD,UAAAA,GAAG,CAACR,KAAJ,GAAY,CAAZ;AACD;;AACDC,QAAAA,KAAK,GAAGA,KAAK,GAAGO,GAAG,CAACR,KAApB;AACD,OAnBD;AAoBAK,MAAAA,KAAK,CAACJ,KAAN,GAAcA,KAAd;AAEA,aAAOI,KAAP;AACD,KAzBe,CAAhB;AA0BA,SAAKK,QAAL,CAAc;AAAEZ,MAAAA,IAAI,EAAEK;AAAR,KAAd;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWC,IAAX,CAAgBM,GAAhB,CAAoBC,KAAK,IAAI;AAC5B,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,KAAK,CAACN,IAAX,CADF,EAEGM,KAAK,CAACC,YAAN,CAAmBF,GAAnB,CAAuBI,GAAG,IAAI;AAC7B,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,GAAG,CAACC,QAAV,SAAuBD,GAAG,CAACR,KAA3B,MADF;AAGD,OAJA,CAFH,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKK,KAAK,CAACJ,KAAX,CARF,CADF;AAYD,KAbA,CADH,CARF,CADF,CADF;AA+BD;;AAjIyB;;AAqI5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    data: [{\n      name: \"Lakshman\",\n      \"transactions\": [\n        {\n          \"month\": \"January\",\n          \"transfer\": 120,\n          trans: null\n        },\n        {\n          \"month\": \"February\",\n          \"transfer\": 90,\n          trans: null\n        },\n        {\n          \"month\": \"March\",\n          \"transfer\": 50,\n          trans: null\n        }\n      ],\n      total: null\n    },\n    {\n      name: \"Kumar\",\n      \"transactions\": [\n        {\n          \"month\": \"January\",\n          \"transfer\": 180,\n          trans: null\n        },\n        {\n          \"month\": \"February\",\n          \"transfer\": 120,\n          trans: null\n        },\n        {\n          \"month\": \"March\",\n          \"transfer\": 90,\n          trans: null\n        }\n      ],\n      total: null\n    },\n    {\n      name: \"Yerra\",\n      \"transactions\": [\n        {\n          \"month\": \"January\",\n          \"transfer\": 100,\n          trans: null\n        },\n        {\n          \"month\": \"February\",\n          \"transfer\": 200,\n          trans: null\n        },\n        {\n          \"month\": \"March\",\n          \"transfer\": 20,\n          trans: null\n        }\n      ],\n      total: null\n    }\n    ]\n  }\n  componentDidMount() {debugger;\n    let tableData = this.state.data.map(value => {\n      let total = 0;\n      value.transactions.forEach((val) => {debugger;\n\n\n        if (val.transfer >= 100) {\n          val.trans = 2 * (val.transfer-100)\n        } \n\n        if(val.transfer >100){\n          val.trans = val.trans + (1*50)\n        }\n        \n        if (val.transfer > 50 && val.transfer <= 100) {\n          val.trans = 1* (val.transfer-50)\n        } \n        \n        if(val.transfer <=50){\n          val.trans = 0;\n        }\n        total = total + val.trans;\n      })\n      value.total = total;\n\n      return value\n    });\n    this.setState({ data: tableData })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <table class=\"table table-bordered\">\n          <thead>\n            <th>Name</th>\n            <th>January / points </th>\n            <th>February / points </th>\n            <th>March / points </th>\n            <th>Total</th>\n          </thead>\n          <tbody>\n            {this.state.data.map(value => {\n              return (\n                <tr >\n                  <td>{value.name}</td>\n                  {value.transactions.map(val => {\n                    return (\n                      <td >{val.transfer} / {val.trans} </td>\n                    )\n                  })}\n\n                  <td>{value.total}</td>\n                </tr>\n              )\n            })}\n\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}